/*##############################################################################

    HPCC SYSTEMS software Copyright (C) 2020 HPCC Systems.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
############################################################################## */

EspInclude(common);

ESPenum LogAgentActions : string
{
    Pause("Pause"),
    Resume("Resume"),
    GetSettings("GetSettings"),
    GetAckedLogFileNames("GetAckedLogFileNames"),
    CleanAckedLogFiles("CleanAckedLogFiles"),
};

ESPStruct [nil_remove] LogAgentGroup
{
    string GroupName;
    ESParray<string> AgentNames;
};

ESPStruct [nil_remove] LogAgentStatus
{
    string AgentName;
    string Status;
};

ESPStruct [nil_remove] LogAgentGroupStatus
{
    string GroupName;
    string GroupStatus;
    ESParray<ESPstruct LogAgentStatus> AgentStatuses;
};

ESPStruct [nil_remove] LogAgentSetting
{
    string AgentName;
    string AckedFileList;
    string AckedLogRequestFile;
    unsigned WaitSeconds;
    unsigned PendingLogBufferSize;
    string AgentStatus;
};

ESPStruct [nil_remove] LogAgentGroupSetting
{
    string GroupName;
    string GroupStatus;
    string TankFileDir;
    string TankFileMask;
    ESParray<ESPstruct LogAgentSetting> AgentSettings;
};

ESPStruct [nil_remove] LogAgentGroupTankFiles
{
    string GroupName;
    string TankFileDir;
    ESParray<string> TankFileNames;
};

ESPrequest [nil_remove] GetLogAgentSettingRequest
{
    ESParray<ESPstruct LogAgentGroup> Groups;
};

ESPresponse [exceptions_inline, nil_remove, http_encode(0)] GetLogAgentSettingResponse
{
    ESParray<ESPstruct LogAgentGroupSetting> Settings;
};

ESPrequest [nil_remove] PauseLogRequest
{
    ESParray<ESPstruct LogAgentGroup> Groups;
    bool Pause(true); //false: resume
};

ESPresponse [exceptions_inline, nil_remove, http_encode(0)] PauseLogResponse
{
    ESParray<ESPstruct LogAgentGroupStatus> Statuses;
};

ESPrequest [nil_remove] GetAckedLogFilesRequest
{
    ESParray<ESPstruct LogAgentGroup> Groups;
};

ESPresponse [exceptions_inline, nil_remove, http_encode(0)] GetAckedLogFilesResponse
{
    ESParray<ESPstruct LogAgentGroupTankFiles> AckedLogFilesInGroups;
};

ESPrequest [nil_remove] CleanAckedFilesRequest
{
    string GroupName;
    ESParray<string> FileNames;
};

ESPresponse [exceptions_inline, nil_remove, http_encode(0)] CleanAckedFilesResponse
{
};

ESPservice [auth_feature("NONE"), exceptions_inline("./smc_xslt/exceptions.xslt")] WSDecoupledLog
{
    ESPmethod GetLogAgentSetting(GetLogAgentSettingRequest, GetLogAgentSettingResponse);
    ESPmethod PauseLog(PauseLogRequest, PauseLogResponse);
    ESPmethod GetAckedLogFiles(GetAckedLogFilesRequest, GetAckedLogFilesResponse);
    ESPmethod CleanAckedFiles(CleanAckedFilesRequest, CleanAckedFilesResponse);
};

SCMexportdef(WSDecoupledLog);
SCMapi(WSDecoupledLog) IClientWSDecoupledLog *createWSDecoupledLogClient();