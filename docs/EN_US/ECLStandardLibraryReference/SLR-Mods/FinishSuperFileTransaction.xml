<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="FinishSuperFileTransaction">
  <title>FinishSuperFileTransaction</title>

  <para><emphasis role="bold">STD.File.FinishSuperFileTransaction<indexterm>
      <primary>STD.File.FinishSuperFileTransaction</primary>
    </indexterm><indexterm>
      <primary>File.FinishSuperFileTransaction</primary>
    </indexterm><indexterm>
      <primary>FinishSuperFileTransaction</primary>
    </indexterm>( [ </emphasis> <emphasis>rollback </emphasis> <emphasis
  role="bold">] )</emphasis></para>

  <informaltable colsep="1" frame="all" rowsep="1">
    <tgroup cols="2">
      <colspec colwidth="80.50pt" />

      <colspec />

      <tbody>
        <row>
          <entry><emphasis>rollback</emphasis></entry>

          <entry>Optional. A boolean flag that indicates whether to commit
          (FALSE) or roll back (TRUE) the transaction. If omitted, the default
          is FALSE.</entry>
        </row>

        <row>
          <entry>Return:<emphasis> </emphasis></entry>

          <entry>Null.</entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>The <emphasis role="bold">FinishSuperFileTransaction
  </emphasis>function terminates a superfile maintenance transaction
  frame.</para>

  <para>If the <emphasis>rollback</emphasis> flag is FALSE, the transaction is
  committed atomically and the transaction frame closes. Otherwise, the
  transaction is rolled back and the transaction frame closes.</para>

  <para>At commit, the superfile is “write” locked for the transaction to
  actually execute, and all locks are released when the transaction frame
  closes. During the timeframe of the “write” lock at commit (usually small
  time window), no concurrent “read” locks are allowed.</para>

  <para>Example:</para>

  <programlisting format="linespecific">IMPORT STD;
 
WeeklyRollup:='~Training::Examples::WeeklyRollup';
WeeklySF    :='~Training::Examples::Weekly';
DailySF     :='~Training::Examples::Daily';
 
DailyDS := DATASET(DailySF,{string Myfield},THOR);
 
SEQUENTIAL(STD.File.StartSuperFileTransaction(),
           STD.File.ClearSuperFile(DailySF),
           OUTPUT(DailyDS,,WeeklyRollup),
           STD.File.AddSuperFile(WeeklySF,WeeklyRollup),
           STD.File.FinishSuperFileTransaction());
//executes the OUTPUT after a "read" lock on the superfile DailySF
//has been initiated by the ClearSuperFile Maintenance function, 
//which in turn executes only at the FinishTransaction</programlisting>
</sect1>
